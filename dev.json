{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
  "devDisksUrl": {
      "value": null,
      "type": "string",
      "metadata": {
        "description": "URL for the Dev Disk Create template, used to create all data disks, reused here for the dev disks as well"
      }
    },
    "nodeName": {
      "value": null,
      "type": "object",
      "metadata": {
        "description": "Object with the Name of the node, i.e. jpdc-dev and the number (i.e. 0 or 1, 0 based)"
      }
    },
    "settings": {
      "value": null,
      "type": "object",
      "metadata": {
        "description": "Object Containing all of the common settings for AD, api versions, VM Sizing, etc. See the parameters-XXX.json."
      }
    },
    "adCmd": {
      "value": null,
      "type": "secureString",
      "metadata": {
        "description": "Active Directory Join Command created by the prepCommon.json template"
      }
    },
    "customData": {
      "value": null,
      "type": "secureString",
      "metadata": {
        "description": "Custom data sent to the VM so the DA chef scripts can connect to OMS"
      }
    },

    "sshKey": {
      "value": null,
      "type": "secureString",
      "metadata": {
        "description": "Private SSH key for the jpdc admin user that is installed in the id_rsa file"
      }
    },

    "sshPub": {
      "value": null,
      "type": "secureString",
      "metadata": {
        "description": "Public SSH key for the jpdc admin user that is installed in the authorized keys file"
      }
    }
  },

  "variables": {
    "imageVHDUri": "[parameters('settings').imageVHDUri]",
    "image": "[concat(parameters('nodeName').name, '-img')]",
    "osdisk": "[concat(parameters('nodeName').name, '-osdisk')]",
    "diskPre": "[concat(parameters('nodeName').name, '-dsk-')]",

    "vmName": "[parameters('nodeName').name]",
    "vmSize": "[parameters('settings').vmSizes.devvmsize]",

    "NICName": "[concat(parameters('nodeName').name, '-nic1')]",

    "devSubnet": "[parameters('settings').network.devSubnet]",
    "devVnet": "[parameters('settings').network.devVnet]",
    "ipArray": "[parameters('settings').network.devNodeIps]",

    "diskCreate": "[parameters('settings').vmDisks]"
  },

  "resources": [
    {
      "comments": "Create an Image from the specified Baseline vhd",
      "type": "Microsoft.Compute/images",
      "name": "[variables('image')]",
      "apiVersion": "[parameters('settings').apiVersions.compute]",
      "location": "[resourceGroup().location]",
      "scale": null,
      "properties": {
        "storageProfile": {
          "osDisk": {
            "osType": "Linux",
            "osState": "Generalized",
            "blobUri": "[variables('imageVHDUri')]",
            "caching": "ReadWrite",
            "storageAccountType": "[parameters('settings').defaultStorageType]"
          },
          "dataDisks": []
        }
      },
      "dependsOn": []
    },
    {
      "comments": "Network Interface for this dev node, should be a static IP",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('NICName')]",
      "apiVersion": "[parameters('settings').apiVersions.network]",
      "location": "[resourceGroup().location]",
      "dependsOn": [ ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "[variables('ipArray')[parameters('nodeName').number]]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[concat(resourceId('jpdc-services-westus-rg', 'Microsoft.Network/virtualNetworks', variables('devVnet')), '/subnets/', variables('devSubnet'))]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false
      }
    },
    {
      "comments": "dev Virtual Node(s). Runs fixed jobs.",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "apiVersion": "[parameters('settings').apiVersions.compute]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/images', variables('image'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('NICName'))]"
      ],
      "tags": {
        "displayName": "VirtualMachine",
        "node": "dev"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('settings').adminUsername]",

          "customData": "[parameters('customData')]",

          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', parameters('settings').adminUsername, '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('sshPub')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "id": "[resourceId('Microsoft.Compute/images', variables('image'))]"
          },
          "osDisk": {
            "name": "[variables('osdisk')]",
            "osType": "Linux",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('settings').defaultStorageType]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('NICName'))]"
            }
          ]
        }
      }
    },
    {
      "comments": "Run the Active Directory join script on bootup",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), '/ADJoinScript')]",
      "apiVersion": "[parameters('settings').apiVersions.extension]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
        },
        "protectedSettings": {
          "commandToExecute": "[parameters('adCmd')]"
        }
      }
    },
    {
      "comments": "Create all of the data disks, thes need to be attached manualy for now using th mountAll script",
      "name": "[concat('DevNode', parameters('nodeName').number, parameters('settings').locationAbbrv, '-Disk-', copyIndex(1))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[parameters('settings').apiVersions.deploy]",

      "copy": {
        "name": "devdiskscopy",
        "count": "[length(variables('diskCreate'))]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[parameters('devDisksUrl')]",
          "contentVersion": "1.0.0.0"
        },

        "parameters": {
          "nodeName": {
            "value": {
              "name": "[concat(variables('diskPre'), variables('diskCreate')[copyIndex()].Nm)]",
              "number": "[copyIndex(1)]"
            }
          },
          "diskSize": {
            "value": "[variables('diskCreate')[copyIndex()].Sz]"
          },

          "settings": {
            "value": "[parameters('settings')]"
          }
        }
      }
    }
  ]
}
